// Package frontend GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package frontend

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "create shorten url and get shortcode",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shorten"
                ],
                "summary": "create shortcode",
                "parameters": [
                    {
                        "description": "payload create shorten url",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shorten.RequestCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/shorten.ResponseCreate"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "409": {
                        "description": "shortcode already used or not available",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "422": {
                        "description": "shortcode format is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    }
                }
            }
        },
        "/{code}": {
            "get": {
                "description": "redirect to url by shortcode",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shorten"
                ],
                "summary": "execute shortcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "shortcode url",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "redirect to shorten url"
                    },
                    "404": {
                        "description": "shotcode not found",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    }
                }
            }
        },
        "/{code}/status": {
            "get": {
                "description": "get status shortcode and redirect count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shorten"
                ],
                "summary": "check status shortcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "shortcode url",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get shortcode status",
                        "schema": {
                            "$ref": "#/definitions/shorten.ResponseList"
                        }
                    },
                    "404": {
                        "description": "shotcode not found",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "shorten.RequestCreate": {
            "type": "object",
            "properties": {
                "shortcode": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "shorten.ResponseCreate": {
            "type": "object",
            "properties": {
                "shortcode": {
                    "type": "string"
                }
            }
        },
        "shorten.ResponseList": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/shorten.Shorten"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "shorten.Shorten": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "lastSeenDate": {
                    "type": "string"
                },
                "redirectCount": {
                    "type": "integer"
                },
                "shortcode": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
